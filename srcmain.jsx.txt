// src/main.jsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import './index.css';
import App from './App';
import Dashboard from './pages/Dashboard';
import Transactions from './pages/Transactions';
import AddTransaction from './pages/AddTransaction';

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <BrowserRouter>
      <Routes>
        <Route path="/" element={<App />}> 
          <Route index element={<Dashboard />} />
          <Route path="transactions" element={<Transactions />} />
          <Route path="add-transaction" element={<AddTransaction />} />
        </Route>
      </Routes>
    </BrowserRouter>
  </React.StrictMode>
);

// src/App.jsx
import { Outlet } from 'react-router-dom';
import { ModeToggle } from './components/ModeToggle';

export default function App() {
  return (
    <div className="min-h-screen bg-background text-foreground p-4">
      <header className="flex justify-between items-center mb-4">
        <h1 className="text-2xl font-bold">Personal Finance Dashboard</h1>
        <ModeToggle />
      </header>
      <Outlet />
    </div>
  );
}

// src/components/ModeToggle.jsx
import { useEffect, useState } from 'react';

export function ModeToggle() {
  const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'light');

  useEffect(() => {
    document.documentElement.classList.toggle('dark', theme === 'dark');
    localStorage.setItem('theme', theme);
  }, [theme]);

  return (
    <button
      onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}
      className="p-2 rounded border"
    >
      {theme === 'dark' ? '‚òÄÔ∏è Light' : 'üåô Dark'}
    </button>
  );
}

// src/pages/Dashboard.jsx
import { Card, CardContent } from '@/components/ui/card';
import mockData from '../data/mockData.json';

export default function Dashboard() {
  const balance = mockData.reduce((acc, t) => acc + (t.type === 'Income' ? t.amount : -t.amount), 0);
  const recent = mockData.slice(-5);

  return (
    <div className="grid gap-4">
      <Card>
        <CardContent className="p-4">Account Balance: ‚Çπ{balance}</CardContent>
      </Card>
      <Card>
        <CardContent className="p-4">Recent Transactions:
          <ul>
            {recent.map((t) => (
              <li key={t.id}>{t.date} - {t.description} - ‚Çπ{t.amount}</li>
            ))}
          </ul>
        </CardContent>
      </Card>
    </div>
  );
}

// src/pages/Transactions.jsx
import mockData from '../data/mockData.json';

export default function Transactions() {
  return (
    <div className="overflow-x-auto">
      <table className="w-full table-auto border">
        <thead>
          <tr>
            <th>Date</th><th>Description</th><th>Amount</th><th>Category</th><th>Type</th>
          </tr>
        </thead>
        <tbody>
          {mockData.map((t) => (
            <tr key={t.id} className="border-t">
              <td>{t.date}</td><td>{t.description}</td><td>‚Çπ{t.amount}</td><td>{t.category}</td><td>{t.type}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

// src/pages/AddTransaction.jsx
import { useState } from 'react';

export default function AddTransaction() {
  const [form, setForm] = useState({ date: '', description: '', amount: '', category: '', type: 'Expense' });

  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });
  const handleSubmit = () => {
    const data = JSON.parse(localStorage.getItem('transactions') || '[]');
    data.push({ ...form, id: Date.now() });
    localStorage.setItem('transactions', JSON.stringify(data));
    alert('Transaction saved!');
  };

  return (
    <form onSubmit={(e) => { e.preventDefault(); handleSubmit(); }} className="grid gap-4 max-w-md">
      <input name="date" type="date" value={form.date} onChange={handleChange} className="border p-2" required />
      <input name="description" placeholder="Description" value={form.description} onChange={handleChange} className="border p-2" required />
      <input name="amount" type="number" placeholder="Amount" value={form.amount} onChange={handleChange} className="border p-2" required />
      <input name="category" placeholder="Category" value={form.category} onChange={handleChange} className="border p-2" required />
      <select name="type" value={form.type} onChange={handleChange} className="border p-2">
        <option>Income</option>
        <option>Expense</option>
      </select>
      <button type="submit" className="bg-blue-500 text-white p-2 rounded">Save Transaction</button>
    </form>
  );
}

// src/data/mockData.json
[
  { "id": 1, "date": "2025-06-20", "description": "Grocery Shopping", "amount": 1500, "category": "Food", "type": "Expense" },
  { "id": 2, "date": "2025-06-19", "description": "Salary", "amount": 20000, "category": "Income", "type": "Income" }
]
